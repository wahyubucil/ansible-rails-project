server {
    listen [::]:80;
    listen 80;

    # listen on both hosts
    server_name {{ deploy_host_name }} www.{{ deploy_host_name }};

    # and redirect to the https host (declared below)
    # avoiding http://www -> https://www -> https:// chain.
    return 301 https://www.{{ deploy_host_name }}.com$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    # listen on the wrong host
    server_name {{ deploy_host_name }};

    ssl_certificate /etc/letsencrypt/live/{{ deploy_host_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ deploy_host_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    include h5bp/security/strict-transport-security.conf;
    include h5bp/ssl/ocsp_stapling.conf;

    # and redirect to the www host (declared below)
    return 301 https://www.{{ deploy_host_name }}$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name www.{{ deploy_host_name }};

    ssl_certificate /etc/letsencrypt/live/{{ deploy_host_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ deploy_host_name }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    include h5bp/security/strict-transport-security.conf;
    include h5bp/ssl/ocsp_stapling.conf;

    include h5bp/basic.conf;

    # set client body size to 10M
    client_max_body_size 10M;

    # Specify a charset
    charset utf-8;

    # Path for static files
    root /var/www/{{ deploy_host_name }}/public;

    # Turn on Passenger
    passenger_enabled on;
    passenger_ruby {{ deploy_ruby_command }};
}